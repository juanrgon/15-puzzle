// Generated by CoffeeScript 1.12.3
(function() {
  var app, gameController, shuffle;

  shuffle = function(arr) {
    var i, j, k, ref, ref1;
    for (i = k = ref = arr.length - 1; ref <= 1 ? k <= 1 : k >= 1; i = ref <= 1 ? ++k : --k) {
      j = Math.floor(Math.random() * (i + 1));
      ref1 = [arr[j], arr[i]], arr[i] = ref1[0], arr[j] = ref1[1];
    }
    return arr;
  };

  gameController = function($scope) {
    $scope.reset = function(event) {
      $scope.tiles = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];
      $scope.tiles = shuffle($scope.tiles);
      return $scope.empty_cell = {
        row: Math.floor($scope.tiles.indexOf(0) / 4),
        column: $scope.tiles.indexOf(0) % 4
      };
    };
    $scope.slide = function(row, column) {
      if (row === $scope.empty_cell.row) {
        if (column < $scope.empty_cell.column) {
          $scope.slideRight(row, column, $scope.empty_cell.column);
        } else {
          $scope.slideLeft(row, column, $scope.empty_cell.column);
        }
      } else if (column === $scope.empty_cell.column) {
        if (row < $scope.empty_cell.row) {
          $scope.slideDown(row, column, $scope.empty_cell.row);
        } else {
          $scope.slideUp(row, column, $scope.empty_cell.row);
        }
      } else {
        return;
      }
      return $scope.empty_cell = {
        row: row,
        column: column
      };
    };
    $scope.slideUp = function(row, column, target_row) {
      var current, next, ref;
      if (row === target_row) {
        return;
      }
      current = row * 4 + column;
      next = (row - 1) * 4 + column;
      $scope.slideUp(row - 1, column, target_row);
      return ref = [$scope.tiles[next], $scope.tiles[current]], $scope.tiles[current] = ref[0], $scope.tiles[next] = ref[1], ref;
    };
    $scope.slideDown = function(row, column, target_row) {
      var current, next, ref;
      if (row === target_row) {
        return;
      }
      current = row * 4 + column;
      next = (row + 1) * 4 + column;
      $scope.slideDown(row + 1, column, target_row);
      return ref = [$scope.tiles[next], $scope.tiles[current]], $scope.tiles[current] = ref[0], $scope.tiles[next] = ref[1], ref;
    };
    $scope.slideRight = function(row, column, target_column) {
      var current, next, ref;
      column === target_column;
      if (column === target_column) {

      } else {
        current = row * 4 + column;
        next = row * 4 + column + 1;
        $scope.slideRight(row, column + 1, target_column);
        return ref = [$scope.tiles[next], $scope.tiles[current]], $scope.tiles[current] = ref[0], $scope.tiles[next] = ref[1], ref;
      }
    };
    $scope.slideLeft = function(row, column, target_column) {
      var current, next, ref;
      if (column === target_column) {
        return;
      }
      current = row * 4 + column;
      next = row * 4 + column - 1;
      $scope.slideLeft(row, column - 1, target_column);
      return ref = [$scope.tiles[next], $scope.tiles[current]], $scope.tiles[current] = ref[0], $scope.tiles[next] = ref[1], ref;
    };
    return $scope.reset();
  };

  app = angular.module('game', []);

  app.controller('gameController', gameController);

}).call(this);
